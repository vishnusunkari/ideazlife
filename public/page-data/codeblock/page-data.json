{"componentChunkName":"component---src-templates-docs-js","path":"/codeblock","result":{"data":{"site":{"siteMetadata":{"title":"TechRead","docsLocation":"https://github.com/vishnusunkari/techread/tree/master/content"}},"mdx":{"fields":{"id":"becbaa1d-79a8-57e2-ac7e-83a0b74a990f","title":"Syntax Highlighting","slug":"/codeblock"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Syntax Highlighting\",\n  \"metaTitle\": \"Syntax Highlighting is the meta title tag for this page\",\n  \"metaDescription\": \"This is the meta description for this page\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following is a code block with JavaScript language syntax highlighting.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"import React from 'react';\\n\")), mdx(\"p\", null, \"Supports multiple languages.\"), mdx(\"p\", null, \"The following is a code block with diff. Lines with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"+\"), \" highlighted in green shade indicating an addition. Lines with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-\"), \" highlighted in red shade indicating a deletion.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"- const data = ['1','2'];\\n+ const data = [1,2];\\n\")), mdx(\"h2\", null, \"Live Editing example\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\",\n    \"metastring\": \"react-live=true\",\n    \"react-live\": \"true\"\n  }), \"<button className={'btn btn-default'}>Change my text</button>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#live-editing-example","title":"Live Editing example"}]},"parent":{"relativePath":"codeblock.md"},"frontmatter":{"metaTitle":"Syntax Highlighting is the meta title tag for this page","metaDescription":"This is the meta description for this page"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/AWS","title":"AWS"}}},{"node":{"fields":{"slug":"/","title":"Welcome to TECH READ"}}},{"node":{"fields":{"slug":"/AWS/2-awsorganizations","title":"AWS Organizations"}}},{"node":{"fields":{"slug":"/AWS/3-awsconfig","title":"AWS Config"}}},{"node":{"fields":{"slug":"/AWS/1-iam","title":"IAM"}}},{"node":{"fields":{"slug":"/AWS/5-awssystemsmanager","title":"AWS Systems Manager"}}},{"node":{"fields":{"slug":"/AWS/7-autoscaling","title":"Autoscaling"}}},{"node":{"fields":{"slug":"/AWS/6-elasticloadlalancing","title":"Elastic Load Balancing"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/codeblock/1-index","title":"Sub Page"}}},{"node":{"fields":{"slug":"/AWS/9-cloudfront","title":"CloudFront"}}},{"node":{"fields":{"slug":"/AWS/8-placementgroups","title":"Placement Groups"}}},{"node":{"fields":{"slug":"/AWS/4-awsservicecatalog","title":"AWS Service Catalog"}}},{"node":{"fields":{"slug":"/codeblock","title":"Syntax Highlighting"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"becbaa1d-79a8-57e2-ac7e-83a0b74a990f"}}}