{"componentChunkName":"component---src-templates-docs-js","path":"/AWS/12-rdsaurora","result":{"data":{"site":{"siteMetadata":{"title":"TechGry","docsLocation":"https://github.com/vishnusunkari/techread/tree/master/content"}},"mdx":{"fields":{"id":"86fb5ab6-a75d-53de-99b3-6c1364c6e5e2","title":"RDS Aurora","slug":"/AWS/12-rdsaurora"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"RDS Aurora\",\n  \"metaTitle\": \"AWS RDS and Aurora\",\n  \"metaDescription\": \"What is RDS? It is Relational Database in AWS.  What is Aurora?  It is a type of DB engine option same as RDS.  RDS vs Aurora, Aurora Serverless\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"RDS vs Aurora\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"RDS\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Aurora\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Master/Slave Architecture\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Master and Read Replicas\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Master and Slave have their own separate underlying hardware storage\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Master and Slave share same underlying hardware storage cluster across a region.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Cannot Access Slave except in Disaster Recovery\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Can Always Access Read Replicas\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"eg: PostgreSQL, MySQL, MariaDB, Oracle, SQL Server\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Aurora replicas are distributed across the AZs that a db cluster spans in a region.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Oracle RAC is not supported by RDS.\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Allows incremental backups up to 35 days.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Allows backtracking of db up to 7 days back\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Allows Cloning the db with not much delay ( 5 - 10 mins)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Allows parallel querying of same kinda data (parellelizes io and compute)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Allows Autoscaling replicas for read workloads\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Supports Global database  (Cross-region replication at storage hardware level by streams of transaction logs).   DR in a cross-region less than a min.\")))), mdx(\"p\", null, \"Oracle RAC (Real Application Clusters) is not supported by RDS. ie why you need to deploy the database in an EC2 instance.\"), mdx(\"h3\", null, \"Aurora Serverless\"), mdx(\"p\", null, \"Concept of Warm pool of instances (without any data) ready to swap into an existing serverless cluster as capacity is needed.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Connections are managed by a shared proxy layer which brokers connections and stops interruptions due to scaling events or failures.   \"), mdx(\"p\", null, \"ACU : 1 Aurora Capacity Unit (2GB + 1vCPU)   \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If an AZ fails, switching to a new AZ takes time with increased failover time.    \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Supports Query Editor using Data API.   \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You can connect to DB in both ways as mysql connection as well as via AWS API.   \")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#rds-vs-aurora","title":"RDS vs Aurora"},{"url":"#aurora-serverless","title":"Aurora Serverless"}]},"parent":{"relativePath":"AWS/12-rdsaurora.mdx"},"frontmatter":{"metaTitle":"AWS RDS and Aurora","metaDescription":"What is RDS? It is Relational Database in AWS.  What is Aurora?  It is a type of DB engine option same as RDS.  RDS vs Aurora, Aurora Serverless"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/","title":"Technology Reading"}}},{"node":{"fields":{"slug":"/AWS","title":"AWS"}}},{"node":{"fields":{"slug":"/AWS/01-awsorganizations","title":"AWS Organizations"}}},{"node":{"fields":{"slug":"/pages/about","title":"About TechGry"}}},{"node":{"fields":{"slug":"/AWS/02-awsconfig","title":"AWS Config"}}},{"node":{"fields":{"slug":"/AWS/00-iam","title":"IAM"}}},{"node":{"fields":{"slug":"/AWS/04-awssystemsmanager","title":"AWS Systems Manager"}}},{"node":{"fields":{"slug":"/AWS/03-awsservicecatalog","title":"AWS Service Catalog"}}},{"node":{"fields":{"slug":"/AWS/07-placementgroups","title":"Placement Groups"}}},{"node":{"fields":{"slug":"/AWS/06-autoscaling","title":"Autoscaling"}}},{"node":{"fields":{"slug":"/AWS/05-elasticloadlalancing","title":"Elastic Load Balancing"}}},{"node":{"fields":{"slug":"/AWS/09-route53","title":"Route53"}}},{"node":{"fields":{"slug":"/AWS/11-efs","title":"EFS"}}},{"node":{"fields":{"slug":"/AWS/08-cloudfront","title":"CloudFront"}}},{"node":{"fields":{"slug":"/AWS/10-s3","title":"S3"}}},{"node":{"fields":{"slug":"/AWS/12-rdsaurora","title":"RDS Aurora"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"86fb5ab6-a75d-53de-99b3-6c1364c6e5e2"}}}