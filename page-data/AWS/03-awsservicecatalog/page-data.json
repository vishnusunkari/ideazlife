{"componentChunkName":"component---src-templates-docs-js","path":"/AWS/03-awsservicecatalog","result":{"data":{"site":{"siteMetadata":{"title":"TechGry","docsLocation":"https://github.com/vishnusunkari/techread/tree/master/content"}},"mdx":{"fields":{"id":"9466607b-b8b9-5860-8bf7-914056d16df4","title":"AWS Service Catalog","slug":"/AWS/03-awsservicecatalog"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"AWS Service Catalog\",\n  \"metaTitle\": \"AWS Service Catalog\",\n  \"metaDescription\": \"What is AWS Service Catalog? Users can be allowed to self-service deploy  AWS products without the usual required IAM permissions\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"AWS Service Catalog (Self-Service)\"), mdx(\"p\", null, \"Users can be allowed to self-service deploy aws products without the usual IAM permissions required\\ntodo so directly with AWS services.  \"), mdx(\"p\", null, \"Normally you need to give lots of permissions to end users to deploy AWS resources using\\nCloudFormation templates eg: (access to EC2, RDS, VPC). Also technical skills required to deploy these resources.\\nService Catalog allows you as a service catalog admin to get all these things done in the\\nback-ground. Just use software and portal to self-service deploy these products.\\nUser would have only read-only access to the AWS account but may have service catalog role\\nwith admin access permission to deploy.  \"), mdx(\"h3\", null, \"Features\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Allows administrators to define \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"PRODUCTS\"), \" and \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"PORTFOLIOS\"), \" (groups of products and configuration). \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Its a per region service.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In addition to service catalog admin access, needs service catalog\\nprovision product permissions added to the customer.  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Within portfolio, you can add \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"TEMPLATE CONSTRAINTS\"), \" so end-user can deploy\\nonly specific type of instances.  \")), mdx(\"h3\", null, \"Types of constraints: LNTS\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Launch\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Notification\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Template\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"StackSet\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#aws-service-catalog-self-service","title":"AWS Service Catalog (Self-Service)"},{"url":"#features","title":"Features"},{"url":"#types-of-constraints-lnts","title":"Types of constraints: LNTS"}]},"parent":{"relativePath":"AWS/03-awsservicecatalog.md"},"frontmatter":{"metaTitle":"AWS Service Catalog","metaDescription":"What is AWS Service Catalog? Users can be allowed to self-service deploy  AWS products without the usual required IAM permissions"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/","title":"Technology Reading"}}},{"node":{"fields":{"slug":"/AWS","title":"AWS"}}},{"node":{"fields":{"slug":"/AWS/00-iam","title":"IAM"}}},{"node":{"fields":{"slug":"/pages/about","title":"About TechGry"}}},{"node":{"fields":{"slug":"/AWS/01-awsorganizations","title":"AWS Organizations"}}},{"node":{"fields":{"slug":"/AWS/04-awssystemsmanager","title":"AWS Systems Manager"}}},{"node":{"fields":{"slug":"/AWS/03-awsservicecatalog","title":"AWS Service Catalog"}}},{"node":{"fields":{"slug":"/AWS/05-elasticloadlalancing","title":"Elastic Load Balancing"}}},{"node":{"fields":{"slug":"/AWS/02-awsconfig","title":"AWS Config"}}},{"node":{"fields":{"slug":"/AWS/06-autoscaling","title":"Autoscaling"}}},{"node":{"fields":{"slug":"/AWS/08-cloudfront","title":"CloudFront"}}},{"node":{"fields":{"slug":"/AWS/10-s3","title":"S3"}}},{"node":{"fields":{"slug":"/AWS/07-placementgroups","title":"Placement Groups"}}},{"node":{"fields":{"slug":"/AWS/09-route53","title":"Route53"}}},{"node":{"fields":{"slug":"/AWS/11-efs","title":"EFS"}}},{"node":{"fields":{"slug":"/AWS/12-rdsaurora","title":"RDS Aurora"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"9466607b-b8b9-5860-8bf7-914056d16df4"}}}